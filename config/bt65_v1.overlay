#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix-transform = &default_transform;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <5>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9)
        >;
    };
};

/* Matrix keyboard */
&kscan0 {
    compatible = "zmk,kscan-gpio-matrix";
    wakeup-source;
    diode-direction = "col2row";

    /* Columns (10 pin) */
    col-gpios =
        <&gpio1 4  GPIO_ACTIVE_LOW>,
        <&gpio0 8  GPIO_ACTIVE_LOW>,
        <&gpio0 24 GPIO_ACTIVE_LOW>,
        <&gpio0 22 GPIO_ACTIVE_LOW>,
        <&gpio0 29 GPIO_ACTIVE_LOW>,
        <&gpio1 13 GPIO_ACTIVE_LOW>,
        <&gpio0 2  GPIO_ACTIVE_LOW>,
        <&gpio1 15 GPIO_ACTIVE_LOW>,
        <&gpio0 9  GPIO_ACTIVE_LOW>,
        <&gpio0 10 GPIO_ACTIVE_LOW>;

    /* Rows (5 pin) */
    row-gpios =
        <&gpio1 1   (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
        <&gpio0 31  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
        <&gpio1 11  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
        <&gpio1 6   (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
        <&gpio0 20  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;

    debounce-press-ms = <5>;
    debounce-release-ms = <5>;
};

/* OLED SSD1306 di I2C0: SDA = P1.00, SCL = P0.11 */
&i2c0 {
    status = "okay";
    clock-frequency = <I2C_BITRATE_STANDARD>;
    pinctrl-0 = <&i2c0_default>;
    pinctrl-names = "default";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
    };
};

/* Definisi pinctrl untuk I2C0: SDA = P1.00, SCL = P0.11 */
&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 0)>, /* P1.00 */
                    <NRF_PSEL(TWIM_SCL, 0, 11)>; /* P0.11 */
        };
    };
};

/* Matikan peripheral bawaan kecuali SWD/RESET */
&nfct { status = "disabled"; };
&spi0 { status = "disabled"; };
&spi1 { status = "disabled"; };
&spi2 { status = "disabled"; };
&i2c1 { status = "disabled"; };
&uart0 { status = "disabled"; };
&uart1 { status = "disabled"; };
&pwm0 { status = "disabled"; };
&pwm1 { status = "disabled"; };
&pwm2 { status = "disabled"; };


/* Pastikan GPIO aktif */
&gpio0 { status = "okay"; };
&gpio1 { status = "okay"; };
